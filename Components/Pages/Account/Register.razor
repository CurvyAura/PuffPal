@page "/register"

@inject IAccountManagement Acct;
@inject NavigationManager NavManager;

<div class="d-flex justify-content-center align-items-center flex-column">
<div class="w-25">
<h3>Register</h3>
<EditForm Model="@registrationModel" OnValidSubmit="SignUp">
    <DataAnnotationsValidator/>
    @* <div class="mb-2"> *@
    @*     <img src="@_userAvatar" class="rounded-circle" height="50" width="50" alt="Alternate Text" /> *@
    @* </div> *@
    <div class="form-group">
        <label>Username</label>
        <input class="form-control" @bind-value="@registrationModel.UserName" placeholder="" />
        <ValidationMessage For="@(() => registrationModel.UserName)" />
    </div>

    <div class="form-group">
        <label>Email address</label>
        <input type="email" class="form-control" @bind-value="@registrationModel.Email" placeholder="" />
        <ValidationMessage For="@(() => registrationModel.Email)" />
    </div>

    <div class="form-group">
        <label>Password</label>
        <input type="password" class="form-control" @bind-value="@registrationModel.Password" placeholder="" />
        <ValidationMessage For="@(() => registrationModel.Password)" />
    </div>

    <div class="mt-2 text-end">
        <NavLink class="nav-link" href="/login">
            <span>Already have an account?</span>
        </NavLink>
    </div>

    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
            <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
            Register
        </button>
    </div>
</EditForm>
</div>
</div>

@code {
    SignUp registrationModel = new();
    private string[] errorList = [];
    private string _spinnerClass = "";
    private string _userAvatar = "content/PuffPal.Shared/favicon.png";

    private async void SignUp()
    {
        _spinnerClass = "spinner-border spinner-border-sm";
        var result = await Acct.RegisterAsync(registrationModel.Email, registrationModel.UserName, registrationModel.Password);
        if (result.Succeeded)
        {
            NavManager.NavigateTo("/login");
        }
        else
        {
            _spinnerClass = "";
            errorList = result.ErrorList;
        }
    }
}
